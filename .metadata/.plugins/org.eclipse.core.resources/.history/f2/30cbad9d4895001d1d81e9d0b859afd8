package bean;
//DAO : Data Access Object

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;

public class MemberDAO {

	String id = "system";
	String pass = "qkrdlstj369!";
	String url = "jdbc:oracle:thin:@localhost:1521/xe";

	Connection con; // 데이터 베이스에 접근할 수 있도록
	PreparedStatement pstmt; // 쿼리를 실행시켜주는 객체
	ResultSet rs; // 데이터베이스 테이블 결과를 리턴받아 자바에 저장해주는 객체

	// 함수 호출로 DB연결 작업 처리로 코드의 간소화
	public void getCon() {
		try {
			// 1. 해당 데이터 베이스를 사용한다고 선언(로딩)
			Class.forName("oracle.jdbc.driver.OracleDriver");

			// 2. 해당 데이터 베이스 접속
			con = DriverManager.getConnection(url, id, pass);

		} catch (Exception e) {
		}
	}

	public void insertMember(MemberBean beans) {

		try {
			getCon();

			String sql = "insert into member values(?,?,?,?,?,?,?,?)";
			PreparedStatement pstmt = con.prepareStatement(sql);

			// ?에 맞게 데이터를 맵핑
			pstmt.setString(1, beans.getId());
			pstmt.setString(2, beans.getPass1());
			pstmt.setString(3, beans.getEmail());
			pstmt.setString(4, beans.getTel());
			pstmt.setString(5, beans.getHobby());
			pstmt.setString(6, beans.getJob());
			pstmt.setString(7, beans.getAge());
			pstmt.setString(8, beans.getInfo());

			pstmt.executeUpdate();

			con.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public Vector<MemberBean> allSelectMember() {

		Vector<MemberBean> v = new Vector<>();

		try {
			// db와 연동을 위해 만든 메소드
			getCon();
			// 쿼리문
			String sql = "select * from member";
			// 쿼리문 실행
			pstmt = con.prepareStatement(sql);
			rs = pstmt.executeQuery();

			// 쿼리 실행 결과를 리턴해서 저장
			while (rs.next()) { // 저장된 데이터를 반복문을 통해 추출 하겠다. >> MemberBean에 저장

				MemberBean beans = new MemberBean();

				beans.setId(rs.getString(1));
				beans.setPass1(rs.getString(2));
				beans.setEmail(rs.getString(3));
				beans.setTel(rs.getString(4));
				beans.setHobby(rs.getString(5));
				beans.setJob(rs.getString(6));
				beans.setAge(rs.getString(7));
				beans.setInfo(rs.getString(8));

				v.add(beans); // beans에 세팅한 값들을 싹 다 벡터에 삽입

			}
			con.close();
		} catch (Exception e) {
		}
		return v;
	}

	public MemberBean oneMember(String id) {

		MemberBean mbean = new MemberBean();

		try {
			getCon();

			String sql = "select * from member where id = ?";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, id);

			rs = pstmt.executeQuery();

			if (rs.next()) {
				mbean.setId(rs.getString(1));
				mbean.setPass1(rs.getString(2));
				mbean.setEmail(rs.getString(3));
				mbean.setTel(rs.getString(4));
				mbean.setHobby(rs.getString(5));
				mbean.setJob(rs.getString(6));
				mbean.setAge(rs.getString(7));
				mbean.setInfo(rs.getString(8));
			}

		} catch (Exception e) {
		}

		return mbean;
	}

	public String getPass(String id) {
		String pass = "";

		try {
			getCon();

			String sql = "select pass1 from member where id=?";

			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, id);
			// DB에 저장된 컬럼중 1번 인덱스인 id에 내가 입력한 id에 해당하는 것 추출
			rs = pstmt.executeQuery();

			if (rs.next()) {
				pass = rs.getString(1);
				// 쿼리문을 통해서 추출한 데이터들의 컬럼 순서에 맞춰 인덱스 설정
				// 지금은 pass1만 뽑아왔으므로 인덱스 1이다.
			}
			con.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return pass;
	}

	public void updateMember(MemberBean mbean) {

		getCon();

		try {
			String sql = "update membet set email=?, tel=? where id=?";
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, mbean.getEmail());
			pstmt.setString(2, mbean.getTel());

			pstmt.executeUpdate();
			con.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}